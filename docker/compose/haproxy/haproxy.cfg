global
    log stdout format raw local0
    maxconn 50000
    # Tuning
    tune.ssl.default-dh-param 2048
    ssl-default-bind-ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384
    ssl-default-bind-options ssl-min-ver TLSv1.2 no-tls-tickets

defaults
    log global
    mode tcp
    option tcplog
    option dontlognull
    timeout connect 10s
    timeout client 60s
    timeout server 60s
    timeout tunnel 3600s  # For long-lived MQTT connections

# Statistics endpoint
listen stats
    bind *:8404
    mode http
    stats enable
    stats uri /stats
    stats refresh 30s
    stats auth admin:admin
    stats admin if TRUE

# MQTT TCP frontend (non-SSL, for internal testing only)
frontend mqtt_tcp_front
    bind *:1883
    mode tcp
    option tcplog
    default_backend mqtt_tcp_back

# MQTT SSL frontend (production)
frontend mqtt_ssl_front
    bind *:8883 ssl crt /usr/local/etc/haproxy/certs/server.pem ca-file /usr/local/etc/haproxy/certs/ca.crt verify required
    mode tcp
    option tcplog
    default_backend mqtt_ssl_back

# MQTT TCP backend
backend mqtt_tcp_back
    mode tcp
    balance leastconn  # Best for long-lived connections
    option tcp-check
    # Health checks
    tcp-check connect port 1883
    server emqx1 emqx1.local:1883 check inter 10s fall 3 rise 2
    server emqx2 emqx2.local:1883 check inter 10s fall 3 rise 2
    server emqx3 emqx3.local:1883 check inter 10s fall 3 rise 2

# MQTT SSL backend
backend mqtt_ssl_back
    mode tcp
    balance leastconn
    option tcp-check
    # Health checks
    tcp-check connect port 8883 ssl
    server emqx1 emqx1.local:8883 check check-ssl verify required ca-file /usr/local/etc/haproxy/certs/ca.crt inter 10s fall 3 rise 2
    server emqx2 emqx2.local:8883 check check-ssl verify required ca-file /usr/local/etc/haproxy/certs/ca.crt inter 10s fall 3 rise 2
    server emqx3 emqx3.local:8883 check check-ssl verify required ca-file /usr/local/etc/haproxy/certs/ca.crt inter 10s fall 3 rise 2
